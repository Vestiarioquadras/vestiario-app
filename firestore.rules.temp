rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // üìã Regras para cole√ß√£o 'users'
    // Usu√°rios s√≥ podem ler/escrever seus pr√≥prios dados
    match /users/{userId} {
      // Permitir leitura e escrita apenas se o usu√°rio estiver autenticado
      // e o userId corresponder ao UID do usu√°rio autenticado
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Permitir cria√ß√£o apenas se o usu√°rio estiver autenticado
      // e o userId corresponder ao UID do usu√°rio autenticado
      allow create: if request.auth != null 
        && request.auth.uid == userId
        && request.resource.data.keys().hasAll(['uid', 'email', 'role', 'name', 'createdAt'])
        && request.resource.data.uid == userId
        && request.resource.data.email == request.auth.token.email
        && request.resource.data.role in ['player', 'owner', 'court_owner'];
    }
    
    // üèüÔ∏è Regras para cole√ß√£o 'courts'
    // Permitir leitura para todos, escrita apenas para donos
    match /courts/{courtId} {
      // Permitir leitura para todos os usu√°rios autenticados
      allow read: if request.auth != null;
      
      // Permitir escrita apenas para donos de quadras
      allow write: if request.auth != null 
        && request.auth.uid == resource.data.ownerId;
      
      // Permitir cria√ß√£o para usu√°rios autenticados (tempor√°rio para popula√ß√£o)
      allow create: if request.auth != null 
        && request.resource.data.ownerId == request.auth.uid;
    }
    
    // üèÜ Regras para cole√ß√£o 'sports'
    // Dados p√∫blicos, leitura para todos
    match /sports/{sportId} {
      allow read: if request.auth != null;
      // Permitir escrita para usu√°rios autenticados (tempor√°rio para popula√ß√£o)
      allow write: if request.auth != null;
    }
    
    // üìÖ Regras para cole√ß√£o 'bookings'
    // Usu√°rios podem gerenciar suas pr√≥prias reservas
    match /bookings/{bookingId} {
      // Permitir leitura para o jogador que fez a reserva ou o dono da quadra
      allow read: if request.auth != null 
        && (request.auth.uid == resource.data.playerId 
            || request.auth.uid == resource.data.courtOwnerId);
      
      // Permitir escrita apenas para o jogador que fez a reserva
      allow write: if request.auth != null 
        && request.auth.uid == resource.data.playerId;
      
      // Permitir cria√ß√£o apenas para usu√°rios autenticados
      allow create: if request.auth != null 
        && request.resource.data.playerId == request.auth.uid;
    }
    
    // ‚≠ê Regras para cole√ß√£o 'reviews'
    // Usu√°rios podem gerenciar suas pr√≥prias avalia√ß√µes
    match /reviews/{reviewId} {
      // Permitir leitura para todos os usu√°rios autenticados
      allow read: if request.auth != null;
      
      // Permitir escrita apenas para o autor da avalia√ß√£o
      allow write: if request.auth != null 
        && request.auth.uid == resource.data.authorId;
      
      // Permitir cria√ß√£o apenas para usu√°rios autenticados
      allow create: if request.auth != null 
        && request.resource.data.authorId == request.auth.uid;
    }
    
    // üè¢ Regras para cole√ß√£o 'clubs'
    // Donos podem gerenciar seus clubes
    match /clubs/{clubId} {
      // Permitir leitura para todos os usu√°rios autenticados
      allow read: if request.auth != null;
      
      // Permitir escrita apenas para o dono do clube
      allow write: if request.auth != null 
        && request.auth.uid == resource.data.ownerId;
      
      // Permitir cria√ß√£o apenas para usu√°rios autenticados
      allow create: if request.auth != null 
        && request.resource.data.ownerId == request.auth.uid;
    }
    
    // ‚ù§Ô∏è Regras para cole√ß√£o 'favorites'
    // Usu√°rios podem gerenciar seus pr√≥prios favoritos
    match /favorites/{favoriteId} {
      // Permitir leitura e escrita apenas para o dono do favorito
      allow read, write: if request.auth != null 
        && request.auth.uid == resource.data.userId;
      
      // Permitir cria√ß√£o apenas para usu√°rios autenticados
      allow create: if request.auth != null 
        && request.resource.data.userId == request.auth.uid;
    }
    
    // üèÜ Regras para cole√ß√£o 'matches'
    // Usu√°rios podem gerenciar suas pr√≥prias partidas
    match /matches/{matchId} {
      // Permitir leitura e escrita apenas para o jogador
      allow read, write: if request.auth != null 
        && request.auth.uid == resource.data.playerId;
      
      // Permitir cria√ß√£o apenas para usu√°rios autenticados
      allow create: if request.auth != null 
        && request.resource.data.playerId == request.auth.uid;
    }
    
    // üìÖ Regras para cole√ß√£o 'blockedSlots'
    // Donos podem gerenciar hor√°rios bloqueados
    match /blockedSlots/{slotId} {
      // Permitir leitura para todos os usu√°rios autenticados
      allow read: if request.auth != null;
      
      // Permitir escrita apenas para donos de quadras
      allow write: if request.auth != null 
        && request.auth.uid == resource.data.ownerId;
      
      // Permitir cria√ß√£o apenas para usu√°rios autenticados
      allow create: if request.auth != null 
        && request.resource.data.ownerId == request.auth.uid;
    }
    
    // üö´ Negar acesso a todas as outras cole√ß√µes
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
